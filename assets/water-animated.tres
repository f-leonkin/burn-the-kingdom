[gd_resource type="VisualShader" load_steps=8 format=2]

[ext_resource path="res://assets/water.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 35, 150, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.4, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=6]

[resource]
code = "shader_type spatial;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Input:5
	float n_out5p0 = TIME;

// VectorOp:6
	vec3 n_in6p1 = vec3(0.40000, 0.00000, 0.00000);
	vec3 n_out6p0 = vec3(n_out5p0) * n_in6p1;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorOp:4
	vec3 n_in4p1 = vec3(35.00000, 150.00000, 1.00000);
	vec3 n_out4p0 = n_out3p0 * n_in4p1;

// VectorOp:7
	vec3 n_out7p0 = n_out6p0 + n_out4p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out7p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -203, 102 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 120, 160 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -460, 240 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -250.144, 195.08 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -460, 80 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( -260, 40 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -80, 100 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 4, 0, 5, 0, 6, 0, 6, 0, 7, 0, 4, 0, 7, 1, 7, 0, 2, 0 )
